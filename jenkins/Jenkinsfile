#!groovy

properties([disableConcurrentBuilds()])

node {
    stage('helo') {
        if (true) {
            echo "hellooooo"
        }
    }
}


pipeline {
    agent none

    environment {
        CI = 'true'
        BACKEND_DIRECTORY = 'backend'
        FRONTEND_DIRECTORY = 'frontend'
    }

    triggers { pollSCM('* * * * *') }

    options {
        buildDiscarder(
            logRotator(
                numToKeepStr: '10',
                artifactNumToKeepStr: '10'
            )
        )
        timestamps()
    }

    stages {
        stage("Build backend") {
            steps {
                // agent {
                //     docker { image '' }
                // }
                script {
                    try {
                        sh "git diff --quiet --exit-code HEAD~1..HEAD ${BACKEND_DIRECTORY}/"
                        echo 'Без сборки так как в директории нет изменений'
                    } catch (err) {
                        sh "chmod +x jenkins/scripts/${BACKEND_DIRECTORY}_build.sh"
                    }
                }
            }
        }

        stage("Build frontend") {
            steps {
                script {
                    try {
                        sh "git diff --quiet --exit-code HEAD~1..HEAD ${FRONTEND_DIRECTORY}/"
                        echo 'Без сборки так как в директории нет изменений'
                    } catch (err) {
                        sh "chmod +x jenkins/scripts/${FRONTEND_DIRECTORY}_build.sh"
                    }
                }
            }
        }
    }
}
